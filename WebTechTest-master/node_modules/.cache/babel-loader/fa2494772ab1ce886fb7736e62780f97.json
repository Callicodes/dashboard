{"ast":null,"code":"var _jsxFileName = \"/Users/aureliuscalliste/Documents/CODE/GitHubRepos/dashboard/dashboard/WebTechTest-master/src/components/QuestionEditor/Checkbox.js\";\nimport React, { Component } from \"react\";\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: props.checked\n    };\n    this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n  }\n\n  toggleCheckboxChange(event) {\n    const {\n      handleCheckboxChange\n    } = this.props;\n    this.setState({\n      isChecked: !this.state.isChecked\n    });\n    handleCheckboxChange(event);\n  }\n\n  render() {\n    const {\n      id,\n      legend,\n      name,\n      label,\n      disabled\n    } = this.props;\n    const {\n      isChecked\n    } = this.state;\n    console.log(\"Checkbox Checked state: \", this.state.isChecked);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: id,\n      name: name,\n      value: label,\n      checked: isChecked,\n      disabled: disabled,\n      onChange: this.toggleCheckboxChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: label,\n      label: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, label));\n  }\n\n}\n\nclass CheckboxGroup extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      children,\n      legend\n    } = this.props;\n    const createCheckbox = React.Children.map(children, child => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, React.cloneElement(child, {\n        id: child.props.id,\n        label: child.props.label,\n        disabled: child.props.disabled,\n        checked: child.props.checked,\n        name: child.props.name,\n        handleCheckboxChange: child.props.handleCheckboxChange\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"usa-fieldset-inputs usa-sans\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"legend\", {\n      className: \"usa-sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, legend), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"usa-unstyled-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, createCheckbox)));\n  }\n\n}\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillUpdate() {\n    console.log(this.state.checked);\n  }\n\n  onChange(event) {\n    this.setState({\n      checked: !event.target.checked\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CheckboxGroup, {\n      legend: \"Test Checkbox Group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      name: \"New Box\",\n      id: \"testId\",\n      label: \"Drivers License\",\n      checked: true,\n      handleCheckboxChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      name: \"2nd Box\",\n      id: \"other-id\",\n      label: \"State Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Checkbox, {\n      name: \"3rd Box\",\n      id: \"other-id\",\n      label: \"Military Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/aureliuscalliste/Documents/CODE/GitHubRepos/dashboard/dashboard/WebTechTest-master/src/components/QuestionEditor/Checkbox.js"],"names":["React","Component","Checkbox","constructor","props","state","isChecked","checked","toggleCheckboxChange","bind","event","handleCheckboxChange","setState","render","id","legend","name","label","disabled","console","log","CheckboxGroup","children","createCheckbox","Children","map","child","cloneElement","Page","onChange","componentWillUpdate","target"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isChecked: props.checked\n        };\n        this.toggleCheckboxChange = this.toggleCheckboxChange.bind(this);\n    }\n\n    toggleCheckboxChange(event) {\n        const { handleCheckboxChange } = this.props;\n        this.setState({ isChecked: !this.state.isChecked });\n        handleCheckboxChange(event);\n    }\n\n    render() {\n        const { id, legend, name, label, disabled } = this.props;\n        const { isChecked } = this.state;\n        console.log(\"Checkbox Checked state: \", this.state.isChecked);\n        return (\n            <div>\n                <input type=\"checkbox\"\n                    id={id}\n                    name={name}\n                    value={label}\n                    checked={isChecked}\n                    disabled={disabled}\n                    onChange={this.toggleCheckboxChange} />\n\n                <label htmlFor={label}\n                    label={label}>{label}\n                </label>\n\n            </div>\n        );\n    }\n\n}\n\nclass CheckboxGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        const { children, legend } = this.props;\n        const createCheckbox = React.Children.map(children, (child) => {\n            return (\n                <li>\n                    {React.cloneElement(child,\n                        {\n                            id: child.props.id,\n                            label: child.props.label,\n                            disabled: child.props.disabled,\n                            checked: child.props.checked,\n                            name: child.props.name,\n                            handleCheckboxChange: child.props.handleCheckboxChange\n                        }\n                    )}\n                </li>\n            );\n        });\n\n        return (\n            <div className=\"checkbox\">\n                <fieldset className=\"usa-fieldset-inputs usa-sans\">\n                    <legend className=\"usa-sr-only\">{legend}</legend>\n                    <ul className=\"usa-unstyled-list\">\n                        {createCheckbox}\n                    </ul>\n\n                </fieldset>\n\n            </div>\n        );\n    }\n\n}\n\n\nclass Page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false\n        }\n        this.onChange = this.onChange.bind(this);\n\n    }\n    componentWillUpdate() {\n        console.log(this.state.checked)\n    }\n    onChange(event) {\n        this.setState({ checked: !event.target.checked });\n    }\n\n    render() {\n        return (\n            <div>\n\n                <CheckboxGroup\n                    legend='Test Checkbox Group' >\n\n                    <Checkbox\n                        name='New Box'\n                        id='testId'\n                        label='Drivers License'\n                        checked={true}\n                        handleCheckboxChange={this.onChange}\n                    />\n\n                    <Checkbox\n                        name='2nd Box'\n                        id='other-id'\n                        label='State Id'\n\n                    />\n                    <Checkbox\n                        name='3rd Box'\n                        id='other-id'\n                        label='Military Id'\n\n                    />\n\n                </CheckboxGroup>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Checkbox"]},"metadata":{},"sourceType":"module"}